body {
	font-family: 'PT Mono', monospace;
	background: cornsilk;
	min-height: 100vh;
	overflow-x: hidden;
	margin: 0;
}

h1,h2,h3,h4,h4,.display {
	text-transform: uppercase;
	font-family: 'Major Mono Display', monospace;
}

.red {color: red;}
.blue {color: blue;}
.green {color: green;}
.yellow {color: yellow;}

$border: 8px solid black;
$mobile: 500px;
$z-top: 1000;

a {
	// Set default link styling
	text-decoration: none;
	transition: box-shadow 230ms ease-in;
	box-shadow: 0px 0px yellow inset;
	// Replicate box-shadow hover effect on line-overflow links
	box-decoration-break: clone;
	&:visited {
		color: blue;
	}
}

@mixin grid-center() {
	display: grid;
	place-items: center;
}

@mixin pseudo() {
	content: "";
	position: absolute;
	top: 0;
	left: 0;
	height: 100%;
	width: 100%;
}

@mixin image-filter() {
	filter: grayscale(0.6) brightness(2);
	mix-blend-mode: multiply;
}

/*=====================NAV=====================*/

:root {
	// Nav transition time as a variable for consistency in transition
	--nav-transition-time: 400ms;
}

nav {
	// Position nav on right & above all other elements
	position: fixed;
	top: 0;
	right: 0;
	z-index: $z-top;
	height: 100vh;
	transition: transform var(--nav-transition-time) ease-in;
	display: flex;
	flex-direction: column;
	justify-content: center;
	align-items: center;
	font-size: 2rem;
	transform: translateX(100%);

	&::before {
		@include pseudo();
		// Shadow over page to extend click listener
		width: 100vw;
		left: -50vw;
		opacity: 0;
		background-color: black;
		transform: scale(0);
		transition: opacity var(--nav-transition-time) ease-out;
	}
	
	button {
		// Style resets
		padding: 0;
		border: none;
		font-family: inherit;
		width: 25vh;
		height: 12.5vh;
		background: orange;
		// Equal radius to width creates a semicircle
		border-radius: 25vh 25vh 0 0;
		transform-origin: center;
		// Move button to quarter down page & rotate
		position: absolute;
		top: 12.5vh;
		left: 0;
		transition: transform var(--nav-transition-time) ease-in;
		transform: translate(-75%,0vh) rotate(-90deg);
		font-size: 2rem;
		cursor: pointer;

		&::before {
			@include pseudo();
			// Double height to make equal width & height
			height: 200%;
			background-color: orange;
			// Pull behind button
			z-index: -1;
			// Make circle
			border-radius: 50%;
			// Rotate to black bordered side
			transform: rotate(135deg) scale(1);
			transition: transform var(--nav-transition-time) ease-in;
			// Add half orange, half black border
			border: $border;
			border-color: black black orange orange;
			// Move to account for border
			top: -8px;
			left: -8px;
		}
	}

	a {
		// Chunk up nav links
		padding: 5vh 10px;
		// Position over button pseudo
		z-index: 1;
		// Beefy font size
		font-size: calc(var(--hero-height) * 0.5);
		// Stagger slide-in of links
		transition: transform 270ms ease-in,
		 box-shadow 270ms ease-in;
		transform: translateX(100vw);
		// Box-shadow
		box-shadow: 0px 0px yellow inset;
		// Hover offset of negative text height + padding
		// Because box-shadow can't be percentage :(
		&:hover, &:focus {
			box-shadow: 0px calc((var(--hero-height) + 10vh) * -1) yellow inset;
		}
	}

	&:hover, &:focus {
		button::before {
			transform: rotate(-45deg);
		}
	}

	&.max {
		transform: translateX(0%);
		&::before {
			transition-delay: var(--nav-transition-time);
			transform: scale(1);
			opacity: 0.2;
		}
		button {
			transform: translateY(32.5vh);
		}
		button::before {
			transition-delay: 0ms;
			transform: rotate(-45deg) scale(6) translate(-25%, 25%);
			border-color: black;
		}
		a {
			transform: translateX(0%);
		}
	}
}

/*====================HERO====================*/

:root {
	// Magic number - longest word fits on screen
	--hero-height: 14vw;
	@media(max-width: $mobile){
		--hero-height: 20vw;
	}
}

#hero {
	@include grid-center();
	margin: 0 auto;
	width: 98%;
	min-height: 100vh;
	* {
		// Remove all margins
		margin: 0;
	}
	h1 {
		font-size: var(--hero-height);
	}
	.char {
		// Set display for transformations on spans
		display: inline-block;
	}
}

/*====================HEAD====================*/

#head {
	// Positioning top & above all elements
	position: fixed;
	top: 2%;
	left: 2%;
	z-index: $z-top;
	// Hide initially
	transform: translateY(-200%);
	transition: transform 380ms ease-in;
	h1 {
		// Clear margin
		margin: 0;
		font-size: 2rem;
	}
	&.show {
		// Show when needed
		transform: translateY(0%);
	}
}

/*==================SECTION==================*/

:root {
 --section-padding: 2rem;
}

section {
	// Stop sections going too wide
	max-width: 900px;
	// Give some y-axis space & centre horizontally
	margin: 10vh auto;
	// Hide overflow caused by ScrollTrigger
	overflow: hidden;
	h2 {
		font-size: 3rem;
		margin: 0;
		// Ensure the display font style
		text-transform: uppercase;
		background: white;
		border: $border;
		padding: 8px var(--section-padding);
		// Hide letters sliding in
		overflow: hidden;
		// Position over content wrapper
		position: relative;
		z-index: 1;
	}
	aside {
		// Aside illustrations for sections
		height: 200px;
		width: 200px;
		border: $border;
		background-color: orange;
		overflow: hidden;
		&.aside--left {
			// Push aside into top left corner
			float: left;
			margin: calc(0px - var(--section-padding) - 8px) 5px 5px calc(0px - var(--section-padding) - 8px);
			// Polygon to dictate text wrapping
			shape-outside: polygon(100% 0%, 0% 100%, 50% 100%, 83% 82%, 100% 50%);
			border-radius: 0 0 50% 0;
		}
		&.aside--right {
			// Push aside into top right corner
			float: right;
			margin: calc(0px - var(--section-padding) - 8px) calc(0px - var(--section-padding) - 8px) 5px 5px;
			// Polygon to dictate text wrapping
			shape-outside: polygon(0% 0%, 100% 100%, 50% 100%, 15% 81%, 0% 50%);
			border-radius: 0 0 0 50%;
		}
		// Smaller at mobile size
		@media(max-width: $mobile){
			height: 150px;
			width: 150px;
		}
		// Add filters to blend images into orangeyness
		img {
			@include image-filter();
			height: auto;
			width: 100%;
			transform: scale(1.5);
		}
		// Resize SVG ghost
		svg {
			// Reposition more centered
			margin-left: 10px;
			height: 90%;
			width: auto;
			overflow: unset;
		}
	}
	.section-container {
		background: white;
		border: $border;
		border-top: none;
		margin: 0 auto;
		// Padding on div means margins on first & last <p>s need clearing
		padding: var(--section-padding);
		p:first-of-type {margin-top: 0;}
		p:last-of-type {margin-bottom: 0;}
	}
}

@media(max-width: $mobile){
	section {
		// Resize section width on mobile
		max-width: 90%;
	}
}

// ==================ABOUT SECTION==================

#about {
	.section-container {
		p:first-of-type {
			hyphens: auto;
		}
	}
}

// =================CONTACT SECTION=================

#contact {
	.section-container {
		padding-bottom: 15vh;
		p:first-of-type {
			@media(max-width: $mobile){
				// Push para down a bit on small screens
				margin-top: 7rem;
			}
		}
		@media(max-width: $mobile) {
			padding-bottom: var(--section-padding);
		}
	}
}

// ===================SVG GHOST===================

.ghost__body-top, .ghost__body-low, .ghost__tail {
	fill: white;
}

.ghost__eye {
	fill: none;
	stroke: black;
	stroke-width: 5;
}

.ghost__shadow {
	fill: black;
	stroke: none;
}

// ==================PORTFOLIO==================

#portfolio {
	.section-container {
		padding: 0;
	}

	.button-grid {
		// Responsive grid layout for buttons
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(140px, 1fr));
		// Gap between buttons to replicate $border
		grid-gap: 8px;
		background-color: black;
		a {
			@include grid-center();
			// Style resets
			border: none;
			text-align: center;
			padding: 1em 0;
			font-size: 1rem;
			color: black;
			// Bold weight for colours
			font-weight: bold;
			cursor: pointer;
			position: relative;
			// Push in front of pseudo
			z-index: 1;
			// Hide pseudo overflow
			overflow: hidden;

			&::before {
				@include pseudo();
				background-color: orange;
				// Push to back
				z-index: -1;
				transform: skewX(-40deg) scaleX(0);
				transform-origin: right;
				width: 200%;
				left: -25%;
				transition: transform 320ms ease-in;
			}

			&:hover::before {
				transform: skewX(-40deg) scaleX(1);
				// Swap transform-origin on mouse leave with pure CSS!
				transform-origin: left;
			}
		}
	}
}

.portfolio-entry {
	padding: var(--section-padding);
	// Positon & overflow for background image containment
	position: relative;
	overflow: hidden;
	text-align: center;
	// Border divider for entries
	border-top: $border;

	.portfolio-entry__title {
		// Bump up title size
		font-size: 2rem;
		// Add padding & reposition using margins
		margin: calc(var(--section-padding) * -1);
		margin-bottom: var(--section-padding);
		padding: var(--section-padding);
	}

	.portfolio-entry__tech {
		// Alternate style for tech list
		font-weight: bold;
		margin-top: 1em !important;
	}

	.portfolio-entry__links {
		// Flex links list
		display: flex;
		justify-content: space-around;
		// Change to column on mobile
		@media(max-width: $mobile) {
			flex-direction: column;
			a {
				margin-bottom: 1em;
			}
		}
	}

	// Elements 1,5,9...
	&:nth-of-type(4n+1) {
		// Clear container padding
		padding: 0;
		// Add flex
		display: flex;
		.col-l {
			// Re-add padding
			padding: var(--section-padding);
			// Dividing border
			border-right: $border;
			@media(max-width: $mobile) {
				// Hide border & padding on mobile
				border-right: none;
				padding-bottom: 0;
			}
		}
		.col-r {
			// Re-add padding
			padding: var(--section-padding);
			@media(max-width: $mobile) {
				// Hide border & padding on mobile
				border-right: none;
				padding-top: 0;
			}
		}
	}
	
	// Elements 3,7,11...
	&:nth-of-type(4n+3) {
		// Clear container padding
		padding: 0;
		// Add flex
		display: flex;
		flex-direction: row-reverse;
		.col-l {
			// Re-add padding
			padding: var(--section-padding);
			@media(max-width: $mobile) {
				// Hide padding on mobile
				padding-bottom: 0;
			}
		}
		.col-r {
			// Re-add padding
			padding: var(--section-padding);
			// Dividing border
			border-right: $border;
			@media(max-width: $mobile) {
				// Hide border & padding on mobile
				border-right: none;
				padding-top: 0;
			}
		}
	}

	@media(max-width: $mobile) {
		// Realign as columns on mobile
		flex-direction: column !important;
	}
}

// FOOTER

footer {

	padding: 1rem var(--section-padding);
	background-color: orange;
	text-align: center;
	border-top: $border;

	h3 {
		font-size: 1.5rem;
	}

	.footer-links {
		display: flex;
		justify-content: space-around;

		@media(max-width: $mobile) {
			flex-direction: column;
		}
	}

	ul {
		list-style: none;
		padding: 0;
	}

	.main-link {
		font-size: 1.2rem;
		margin-bottom: 1em;
	}

	.sub-link {
		font-size: 1rem;
		&:first-of-type {
			margin-top: 0.5em;
		}
	}
}